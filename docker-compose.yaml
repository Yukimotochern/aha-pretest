version: "3.9"
services:
  # app services
  postgres:
    image: "postgres:15.2-alpine"
    restart: always
    env_file:
      - "./config/postgres/.env.local"
    volumes:
      - "aha_pg_data:/var/lib/postgresql/data"
    ports:
      - "5432:5432"
  redis:
    image: "redis:7.0-alpine"
    restart: always
    volumes:
      - "aha_redis_data:/data"
    ports:
      - "6379:6379"
  backend:
    build:
      context: .
      dockerfile: "./dockerfiles/Dockerfile"
    command: "npx nx run backend:serve:development"
    ports:
      - "4000:4000"
    volumes:
      - ./:/app
      - node_modules:/app/node_modules
    env_file:
      - "./packages/backend/.env.local"
    environment:
      - REDIS_HOST=redis
      - POSTGRES_HOST=postgres
    depends_on:
      - redis
      - postgres
  frontend:
    build:
      context: .
      dockerfile: "./dockerfiles/Dockerfile"
    command: "npx nx run frontend:serve:development"
    ports:
      - "4200:4200"
    volumes:
      - ./:/app
      - node_modules:/app/node_modules
    env_file:
      - "./packages/backend/.env.local"
    environment:
      - VITE_PROXY_HOST=backend
      - "BACKEND_URL=http://localhost:4200"
    tty: true
  # utility services
  npm:
    image: "node:18.16-alpine"
    working_dir: /app
    volumes:
      - ./:/app
      - node_modules:/app/node_modules
    entrypoint: npm
  prisma:
    image: "node:18.16-alpine"
    working_dir: /app
    volumes:
      - ./:/app
      - node_modules:/app/node_modules
    env_file:
      - "packages/prisma/.env.local"
    entrypoint: ["npx", "prisma"]
  nx:
    image: "node:18.16-alpine"
    working_dir: /app
    volumes:
      - ./:/app
      - node_modules:/app/node_modules
    entrypoint: ["npx", "nx"]
volumes:
  aha_pg_data:
  aha_redis_data:
  node_modules:
